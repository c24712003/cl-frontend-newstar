{"version":3,"sources":["webpack:///src/app/dashboard/dashboard-routing.module.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.module.ts","webpack:///src/app/hero-search/hero-search.component.html","webpack:///src/app/hero-search/hero-search.component.ts"],"names":["routes","path","component","DashboardComponent","DashboardRoutingModule","RouterModule","heroService","heroes","getHeroes","subscribe","slice","DashboardModule","CommonModule","HeroSearchComponent","searchTerms","Subject","term","next","heroes$","pipe","debounceTime","distinctUntilChanged","switchMap","searchHeroes","search"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,UAAMA,MAAM,GAAW,CAAC;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE,kDAAAC;AAAvB,OAAD,CAAvB;;UAMaC,uB;;;;;yBAAAA,uB;AAAsB,O;;;cAAtBA;;;kBAHF,CAAC,6CAAAC,YAAA,UAAsBL,MAAtB,CAAD,C,EACC,6CAAAK,Y;;;;4HAECD,uB,EAAsB;AAAA;AAAA,oBAFvB,6CAAAC,YAEuB;AAAA,S;AAFX,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNtB;;AAEE;;AACE;;AAAI;;AAAa;;AACnB;;AACF;;;;;;AAJI;;AAEI;;AAAA;;;;UCIGF,mB;AAGX,qCAAoBG,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AAFpB,eAAAC,MAAA,GAAiB,EAAjB;AAEiD;;;;iBAEjD,oBAAW;AACT,iBAAKC,SAAL;AACD;;;iBAED,qBAAS;AAAA;;AACP,iBAAKF,WAAL,CAAiBE,SAAjB,GACGC,SADH,CACa,UAAAF,MAAM;AAAA,qBAAI,KAAI,CAACA,MAAL,GAAcA,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAlB;AAAA,aADnB;AAED;;;;;;;yBAZUP,mB,EAAkB,uH;AAAA,O;;;cAAlBA,mB;AAAkB,sC;AAAA,gB;AAAA,e;AAAA,sK;AAAA;AAAA;ADT/B;;AAAI;;AAAU;;AACd;;AACE;;AAMF;;AAEA;;;;AARsB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEgBTQ,gB;;;;;yBAAAA,gB;AAAe,O;;;cAAfA;;;kBALF,CACP,6CAAAC,YADO,EAEP,uDAAAR,sBAFO,C;;;;4HAKEO,gB,EAAe;AAAA,yBARxB,kDAAAR,kBAQwB,EAPxB,gEAAAU,mBAOwB;AAPL,oBAGnB,6CAAAD,YAHmB,EAInB,uDAAAR,sBAJmB;AAOK,S;AAHF,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTtB;;AACE;;AACE;;AACF;;AACF;;;;;;AAHK;;AAAA;;AACD;;AAAA;;;;UCOKS,oB;AAIX,sCAAoBP,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AAFZ,eAAAQ,WAAA,GAAc,IAAI,kCAAAC,OAAJ,EAAd;AAEwC,S,CAEhD;;;;;iBACA,gBAAOC,IAAP,EAAmB;AACjB,iBAAKF,WAAL,CAAiBG,IAAjB,CAAsBD,IAAtB;AACD;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKE,OAAL,GAAe,KAAKJ,WAAL,CAAiBK,IAAjB,EACb;AACA,4DAAAC,YAAA,EAAa,GAAb,CAFa,EAIb;AACA,4DAAAC,oBAAA,GALa,EAOb;AACA,4DAAAC,SAAA,EAAU,UAACN,IAAD;AAAA,qBAAkB,MAAI,CAACV,WAAL,CAAiBiB,YAAjB,CAA8BP,IAA9B,CAAlB;AAAA,aAAV,CARa,CAAf;AAUD;;;;;;;yBAtBUH,oB,EAAmB,uH;AAAA,O;;;cAAnBA,oB;AAAmB,wC;AAAA,gB;AAAA,e;AAAA,mK;AAAA;AAAA;;;ADfhC;;AACE;;AAAI;;AAAW;;AAEf;;AAAkC;AAAA;;AAAA;;AAAA,qBAAS,IAAAW,MAAA,WAAT;AAAgC,aAAhC;;AAAlC;;AAEA;;AACE;;;;AAKF;;AACF;;;;AANyB;;AAAA","file":"src_app_dashboard_dashboard_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [{ path: '', component: DashboardComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","<h3>Top Heroes</h3>\n<div class=\"grid grid-pad\">\n  <a *ngFor=\"let hero of heroes\" class=\"col col-1\"\n      routerLink=\"/detail/{{hero.id}}\">\n    <div class=\"module hero\">\n      <h4>{{hero.name}}</h4>\n    </div>\n  </a>\n</div>\n\n<app-hero-search></app-hero-search>\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[] = [];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n      .subscribe(heroes => this.heroes = heroes.slice(1, 5));\n  }\n}\n","import { HeroSearchComponent } from './../hero-search/hero-search.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    HeroSearchComponent\n  ],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule\n  ]\n})\nexport class DashboardModule { }\n","<div id=\"search-component\">\n  <h4>Hero Search</h4>\n\n  <input #searchBox id=\"search-box\" (keyup)=\"search(searchBox.value)\" />\n\n  <ul class=\"search-result\">\n    <li *ngFor=\"let hero of heroes$ | async\" >\n      <a routerLink=\"/detail/{{hero.id}}\">\n        {{hero.name}}\n      </a>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\nimport { Observable, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: [ './hero-search.component.css' ]\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.heroService.searchHeroes(term)),\n    );\n  }\n}\n"]}